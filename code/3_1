#include <GL/glut.h>
#include <iostream>

using namespace std;

void RenderScene(void)
{
	cout << "RenderScene" << endl;

	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0f, 0.0f, 0.0f);
	glRectf(-25.0f, 25.0f, 25.0f, -25.0f);

	//glFlush();
	glutSwapBuffers();
}

void SetupRC(void)
{
	cout << "SetupRC" << endl;
	glClearColor(0.0f, 0.0f, 1.0f, 1.0f);
}

void ChangeSize(GLsizei w, GLsizei h)
{
	cout << "w = " << w << "  " << "h = " << h << endl;
	cout << "ChangeSize" << endl;

	GLint wSize = 100;
	GLfloat aspectRatio;

	if(h == 0) h = 1;

	glViewport(0, 0, w, h);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	
	if (w > h) glOrtho(-100, 100, -100, 100, 100, -100);
	else glOrtho(-100, 100, -100, 100, 100, -100);

	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(500, 500);
	glutCreateWindow("simple");

	glutDisplayFunc(RenderScene);
	glutReshapeFunc(ChangeSize);

	SetupRC();
	glutMainLoop();
}

